Labs/bomblab/bomb77$ r2 bomb
 -- This is fine.
[0x00400d80]> aa
[x] Analyze all flags starting with sym. and entry0 (aa)
[0x00400d80]> pdf @ fun7
Invalid address (fun7)
[0x00400d80]> pdf @ sym.fun7
/ (fcn) sym.fun7 64
|   sym.fun7 ();
|           ; CALL XREF from 0x0040132e (sym.fun7)
|           ; CALL XREF from 0x0040131d (sym.fun7)
|           ; CALL XREF from 0x0040137b (sym.secret_phase)
|           0x0040130a      4883ec08       sub rsp, 8
|           0x0040130e      4885ff         test rdi, rdi
|       ,=< 0x00401311      7426           je 0x401339
|       |   0x00401313      8b07           mov eax, dword [rdi]
|       |   0x00401315      39f0           cmp eax, esi
|      ,==< 0x00401317      7e0d           jle 0x401326
|      ||   0x00401319      488b7f08       mov rdi, qword [rdi + 8]    ; [0x8:8]=0
|      ||   0x0040131d      e8e8ffffff     call sym.fun7
|      ||   0x00401322      01c0           add eax, eax
|     ,===< 0x00401324      eb1f           jmp 0x401345
|     |`--> 0x00401326      39f0           cmp eax, esi
|     |,==< 0x00401328      7416           je 0x401340
|     |||   0x0040132a      488b7f10       mov rdi, qword [rdi + 0x10] ; [0x10:8]=0x1003e0002
|     |||   0x0040132e      e8d7ffffff     call sym.fun7
|     |||   0x00401333      8d440001       lea eax, [rax + rax + 1]    ; 0x1
|    ,====< 0x00401337      eb0c           jmp 0x401345
|    |||`-> 0x00401339      b8ffffffff     mov eax, 0xffffffff         ; -1 ; -1
|    |||,=< 0x0040133e      eb05           jmp 0x401345
|    ||`--> 0x00401340      b800000000     mov eax, 0
|    || |   ; JMP XREF from 0x0040133e (sym.fun7)
|    || |   ; JMP XREF from 0x00401337 (sym.fun7)
|    || |   ; JMP XREF from 0x00401324 (sym.fun7)
|    ``-`-> 0x00401345      4883c408       add rsp, 8
\           0x00401349      c3             ret
[0x00400d80]> pdf @ sym.secret_bomb
Invalid address (sym.secret_bomb)
[0x00400d80]> pdf @ sym.secret_phase
/ (fcn) sym.secret_phase 81
|   sym.secret_phase ();
|           ; CALL XREF from 0x0040191c (sym.phase_defused)
|           0x0040134a      53             push rbx
|           0x0040134b      e823040000     call sym.read_line
|           0x00401350      ba0a000000     mov edx, 0xa
|           0x00401355      be00000000     mov esi, 0
|           0x0040135a      4889c7         mov rdi, rax
|           0x0040135d      e82ef9ffff     call sym.imp.strtol
|           0x00401362      4889c3         mov rbx, rax
|           0x00401365      8d40ff         lea eax, [rax - 1]
|           0x00401368      3de8030000     cmp eax, 0x3e8
|       ,=< 0x0040136d      7605           jbe 0x401374
|       |   0x0040136f      e88a030000     call sym.explode_bomb
|       `-> 0x00401374      89de           mov esi, ebx
|           0x00401376      bf20416000     mov edi, obj.n1             ; "$" @ 0x604120
|           0x0040137b      e88affffff     call sym.fun7
|           0x00401380      83f801         cmp eax, 1
|       ,=< 0x00401383      7405           je 0x40138a
|       |   0x00401385      e874030000     call sym.explode_bomb
|       `-> 0x0040138a      bf58284000     mov edi, str.Wow__You_ve_defused_the_secret_stage_ ; "Wow! You've defused the secret stage!" @ 0x402858
|           0x0040138f      e84cf8ffff     call sym.imp.puts
|           0x00401394      e808050000     call sym.phase_defused
|           0x00401399      5b             pop rbx
\           0x0040139a      c3             ret
[0x00400d80]> s obj.n1
[0x00604120]> pd
            ;-- n1:
            ; DATA XREF from 0x00401376 (sym.secret_phase)
            0x00604120      2400           and al, 0
            0x00604122      0000           add byte [rax], al
            0x00604124      0000           add byte [rax], al
            0x00604126      0000           add byte [rax], al
            0x00604128      40             invalid
            0x00604129      41             invalid
            0x0060412a      60             invalid
            0x0060412b      0000           add byte [rax], al
            0x0060412d      0000           add byte [rax], al
            0x0060412f      006041         add byte [rax + 0x41], ah
            0x00604132      60             invalid
            0x00604133      0000           add byte [rax], al
            0x00604135      0000           add byte [rax], al
            0x00604137      0000           add byte [rax], al
            0x00604139      0000           add byte [rax], al
            0x0060413b      0000           add byte [rax], al
            0x0060413d      0000           add byte [rax], al
            ;-- n21:
            0x0060413f  ~   0008           add byte [rax], cl
            0x00604141      0000           add byte [rax], al
            0x00604143      0000           add byte [rax], al
            0x00604145      0000           add byte [rax], al
            0x00604147      00c0           add al, al
            0x00604149      41             invalid
            0x0060414a      60             invalid
            0x0060414b      0000           add byte [rax], al
            0x0060414d      0000           add byte [rax], al
            0x0060414f      008041600000   add byte [rax + 0x6041], al
            0x00604155      0000           add byte [rax], al
            0x00604157      0000           add byte [rax], al
            0x00604159      0000           add byte [rax], al
            0x0060415b      0000           add byte [rax], al
            0x0060415d      0000           add byte [rax], al
            ;-- n22:
            0x0060415f  ~   0032           add byte [rdx], dh
            0x00604161      0000           add byte [rax], al
            0x00604163      0000           add byte [rax], al
            0x00604165      0000           add byte [rax], al
            0x00604167      00a041600000   add byte [rax + 0x6041], ah
            0x0060416d      0000           add byte [rax], al
            0x0060416f      00e0           add al, ah
            0x00604171      41             invalid
            0x00604172      60             invalid
            0x00604173      0000           add byte [rax], al
            0x00604175      0000           add byte [rax], al
            0x00604177      0000           add byte [rax], al
            0x00604179      0000           add byte [rax], al
            0x0060417b      0000           add byte [rax], al
            0x0060417d      0000           add byte [rax], al
            ;-- n32:
            0x0060417f  ~   0016           add byte [rsi], dl
            0x00604181      0000           add byte [rax], al
            0x00604183      0000           add byte [rax], al
            0x00604185      0000           add byte [rax], al
            0x00604187      00a042600000   add byte [rax + 0x6042], ah
            0x0060418d      0000           add byte [rax], al
            0x0060418f      006042         add byte [rax + 0x42], ah
            0x00604192      60             invalid
            0x00604193      0000           add byte [rax], al
            0x00604195      0000           add byte [rax], al
            0x00604197      0000           add byte [rax], al
            0x00604199      0000           add byte [rax], al
            0x0060419b      0000           add byte [rax], al
            0x0060419d      0000           add byte [rax], al
            ;-- n33:
            0x0060419f  ~   002d00000000   add byte [0x006041a5], ch
            0x006041a5      0000           add byte [rax], al
            0x006041a7      0000           add byte [rax], al
[0x00604120]> pd.node i*?*? value (node)l (node)r
[0x00604120]> pf.node i*?*? value (node)l (node)r
[0x00604120]> pf.node @ obj.n1
 value : 0x00604120 = 36
     l : (*0x0) NULL
     r : (*0x0) NULL
[0x00604120]> pf.node q*?*? value (node)l (node)r
[0x00604120]> pf.node @ obj.n1
 value : 0x00604120 = (qword)0x0000000000000024
     l : (*0x604140)
                struct<node>
       value : 0x00604140 = (qword)0x0000000000000008
           l : (*0x6041c0)
                      struct<node>
             value : 0x006041c0 = (qword)0x0000000000000006
                 l : (*0x604220)
                            struct<node>
                   value : 0x00604220 = (qword)0x0000000000000001
                       l : (*0x0) NULL
                       r : (*0x0) NULL
                 r : (*0x604280)
                            struct<node>
                   value : 0x00604280 = (qword)0x0000000000000007
                       l : (*0x0) NULL
                       r : (*0x0) NULL
           r : (*0x604180)
                      struct<node>
             value : 0x00604180 = (qword)0x0000000000000016
                 l : (*0x6042a0)
                            struct<node>
                   value : 0x006042a0 = (qword)0x0000000000000014
                       l : (*0x0) NULL
                       r : (*0x0) NULL
                 r : (*0x604260)
                            struct<node>
                   value : 0x00604260 = (qword)0x0000000000000023
                       l : (*0x0) NULL
                       r : (*0x0) NULL
     r : (*0x604160)
                struct<node>
       value : 0x00604160 = (qword)0x0000000000000032
           l : (*0x6041a0)
                      struct<node>
             value : 0x006041a0 = (qword)0x000000000000002d
                 l : (*0x604200)
                            struct<node>
                   value : 0x00604200 = (qword)0x0000000000000028
                       l : (*0x0) NULL
                       r : (*0x0) NULL
                 r : (*0x6042c0)
                            struct<node>
                   value : 0x006042c0 = (qword)0x000000000000002f
                       l : (*0x0) NULL
                       r : (*0x0) NULL
           r : (*0x6041e0)
                      struct<node>
             value : 0x006041e0 = (qword)0x000000000000006b
                 l : (*0x604240)
                            struct<node>
                   value : 0x00604240 = (qword)0x0000000000000063
                       l : (*0x0) NULL
                       r : (*0x0) NULL
                 r : (*0x6042e0)
                            struct<node>
                   value : 0x006042e0 = (qword)0x00000000000003e9
                       l : (*0x0) NULL
                       r : (*0x0) NULL

